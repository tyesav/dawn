<!-- snippets/variant-picker.liquid -->
<div class="custom-variant-picker">
  {%- comment -%}
    Your task:
    Build the color selector UI here using Shopify's variant data.
    Replicate the behavior and responsiveness from:
    https://dfyne.com/collections/defy/products/dfyne-defy-red-crop-top-250401
  {%- endcomment -%}

  {% comment %}
    HINT: You can use `product.variants`, `variant.option1`, or loop through `product.options_with_values`
  {% endcomment %}

  {% for option in product.options_with_values %}
    {% if option.name == 'Color' %}
      <div class="variant-label">Color:</div>
      <div class="variant-swatches">
        {% for value in option.values %}
          <button
            class="swatch"
            type="button"
            data-color="{{ value | escape }}"
            aria-label="{{ value | escape }}"
            style="background-color: {{ value | downcase }};"
          ></button>
        {% endfor %}
      </div>
    {% endif %}
  {% endfor %}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const swatches = document.querySelectorAll('.custom-variant-picker .swatch');
    swatches.forEach((swatch) => {
      swatch.addEventListener('click', function () {
        swatches.forEach((s) => s.classList.remove('selected'));
        this.classList.add('selected');
        const color = this.getAttribute('data-color');
        const selects = document.querySelectorAll('select[name^="options"]');
        selects.forEach((select) => {
          [...select.options].forEach((option) => {
            if (option.text.trim() === color) {
              select.value = option.value;
              select.dispatchEvent(new Event('change'));
            }
          });
        });
      });
    });
  });
</script>

<style>
  .variant-swatches {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin-top: 0.5rem;
  }

  .swatch {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 2px solid transparent;
    cursor: pointer;
    transition: border-color 0.2s ease, transform 0.2s ease;
    outline: none;
    position: relative;
  }

  .swatch::after {
    content: '';
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    border-radius: 50%;
    border: 2px solid transparent;
    transition: border 0.2s ease;
  }

  .swatch:hover {
    transform: scale(1.05);
    border-color: #e8e8e1;
  }

  .swatch.selected::after {
    border-color: #111;
  }
</style>
